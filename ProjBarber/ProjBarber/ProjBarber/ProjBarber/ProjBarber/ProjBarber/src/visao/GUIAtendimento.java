/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.AtendimentoVO;
import modelo.ProdutoVO;
import servicos.AtendimentoServicos;
import servicos.ProdutoServicos;
import servicos.ServicosFactory;

/**
 *
 * @author braia
 */
public class GUIAtendimento extends javax.swing.JInternalFrame {
    
    DefaultTableModel dtm = new DefaultTableModel(
    new Object[][]{},
    new Object[]{"Código","Nome","Valor"});
    /**
     * Creates new form GUIAtendimento
     */
    public GUIAtendimento() {
        initComponents();
        prencherTabela();
        IconeTela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgFpagamento = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutos = new javax.swing.JTable();
        jbAtualizar = new javax.swing.JButton();
        jbAdicionarProduto = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtNomeCli = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtComprar = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtPagamento = new javax.swing.JTextField();
        jbConfirmar = new javax.swing.JButton();
        jbCadastrarAtendimento = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jtSoma = new javax.swing.JTextField();
        jrbAvista = new javax.swing.JCheckBox();
        jrbCredito = new javax.swing.JCheckBox();
        jrbDebito = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtPagamentoResultado = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtTrocoResultado = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Tabela de produtos:");

        jtProdutos.setFocusable(false);
        jtProdutos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jtProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Valor"
            }
        ));
        jtProdutos.getTableHeader().setResizingAllowed(false);
        jtProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtProdutos);

        jbAtualizar.setText("Atualizar tabela");
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });

        jbAdicionarProduto.setText("Adicionar produto");
        jbAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbAdicionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(141, 141, 141))
                    .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jbAtualizar)
                .addGap(18, 18, 18)
                .addComponent(jbAdicionarProduto)
                .addGap(28, 28, 28))
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Cliente:");

        jtComprar.setFocusable(false);
        jtComprar = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jtComprar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Valor"
            }
        ));
        jtComprar.getTableHeader().setResizingAllowed(false);
        jtComprar.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtComprar);

        jLabel3.setText("Produtos a ser comprados:");

        jLabel4.setText("Pagamento:");

        jbConfirmar.setText("Confirmar");
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jbCadastrarAtendimento.setText("Cadastrar Atendimento");
        jbCadastrarAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarAtendimentoActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jtSoma.setEnabled(false);

        bgFpagamento.add(jrbAvista);
        jrbAvista.setText("Á Vista");

        bgFpagamento.add(jrbCredito);
        jrbCredito.setText("Crédito");

        bgFpagamento.add(jrbDebito);
        jrbDebito.setText("Débito");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jbConfirmar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(3, 3, 3)
                                        .addComponent(jtPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)))
                                .addGap(171, 171, 171))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jbCadastrarAtendimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(89, 89, 89)
                                .addComponent(jbLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtNomeCli, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jrbAvista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbCredito)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbDebito)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNomeCli)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbConfirmar)
                    .addComponent(jtSoma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbAvista)
                    .addComponent(jrbCredito)
                    .addComponent(jrbDebito))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jbCadastrarAtendimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtPagamentoResultado.setEnabled(false);
        jtPagamentoResultado.setColumns(20);
        jtPagamentoResultado.setRows(5);
        jScrollPane4.setViewportView(jtPagamentoResultado);

        jtTrocoResultado.setEnabled(false);
        jtTrocoResultado.setColumns(20);
        jtTrocoResultado.setRows(5);
        jScrollPane3.setViewportView(jtTrocoResultado);

        jLabel5.setText("PAGAMENTO");

        jLabel6.setText("TROCO");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel5)))
                .addGap(89, 89, 89))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limparTabelaCompra(){
        jtNomeCli.setText("");
        jtPagamento.setText("");
        jtPagamentoResultado.setText("");
        jtTrocoResultado.setText("");
        ((DefaultTableModel) jtComprar.getModel()).setRowCount(0);//limpa a tabela compra
    }
    
        private void limparTabela() {
        dtm.setNumRows(0);
    }
        
    private void IconeTela(){
       String URL = "/icones/icon_title2.png";
       setFrameIcon(new ImageIcon(this.getClass().getResource(URL)));
    }
    
    private void jbAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarProdutoActionPerformed
        try {
            prencherTabelaComprar();
        } catch (ParseException ex) {
              JOptionPane.showMessageDialog(
                      rootPane,
                      "mensagem de erro",
                      "impossivel adicionar!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbAdicionarProdutoActionPerformed

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
                    limparTabela();
                    prencherTabela();
    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jbCadastrarAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarAtendimentoActionPerformed
        
        if(jtNomeCli.getText().isEmpty()){
             JOptionPane.showMessageDialog(
                     null,
                     "necessário prencher os campos!",
                     "mensagem e atenção",
                     JOptionPane.INFORMATION_MESSAGE);
      
        }else{
            
                if (jtPagamento.getText().isEmpty()) {
             JOptionPane.showMessageDialog(
                     null,
                     "Digite um valor!",
                     "mensagem de atenção",
                    JOptionPane.INFORMATION_MESSAGE);
       
}else{ 
    
        if(bgFpagamento.isSelected(jrbAvista.getModel())){
            jtPagamentoResultado.setText((String)"R$: "+ jtPagamento.getText());
        }else if(bgFpagamento.isSelected(jrbCredito.getModel())){
            jtPagamentoResultado.setText((String)"\nForma de Pagamento: \n" + (jrbCredito.getText()));
        }else if(bgFpagamento.isSelected(jrbDebito.getModel())){
            jtPagamentoResultado.setText((String)"\nForma de Pagamento: \n" + (jrbDebito.getText()));
        }

        calculoTroco();
        cadastrarAtendimento();
       
      }
      
      }//fecha else
    }//GEN-LAST:event_jbCadastrarAtendimentoActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
              limparTabelaCompra();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
            DecimalFormat df = new DecimalFormat("0.00");
            jtSoma.setText("R$ " + df.format(soma()));
    }//GEN-LAST:event_jbConfirmarActionPerformed
    
     private void cadastrarAtendimento() {      
         
         try {            
            AtendimentoVO aVO = new AtendimentoVO();
            aVO.setNomeCliente(jtNomeCli.getText());
            aVO.setFPagamento(Fpagamento());
            aVO.setValorTotal(soma());
            
            //Enviando o objeto aVO para o banco de dados
            AtendimentoServicos as = servicos.ServicosFactory.getAtendimentoServicos();
            //Chamando o método 
            as.cadastrarAtendimento(aVO);
            
          
            
            JOptionPane.showMessageDialog(
                        null,
                        "Atendimento cadastrado com sucesso!",
                        "Mensagem de confirmação",
                        JOptionPane.INFORMATION_MESSAGE);        
            
        } catch (Exception e) {
            e.printStackTrace();
           JOptionPane.showMessageDialog(
                        null,
                        "erro ao cadastrar Atendimento!",
                        "Mensagem de erro",
                        JOptionPane.ERROR_MESSAGE);
           
             JOptionPane.showMessageDialog(
                        null,
                        "Preencha os campos!",
                        "Mensagem de atenção",
                        JOptionPane.INFORMATION_MESSAGE);
        }//fecha catch     
    }//fecha método cadastrar
    
    
    
    private double calculoTroco(){
         Double valordado = Double.parseDouble(jtPagamento.getText());
        if(bgFpagamento.isSelected(jrbAvista.getModel())){
            if (valordado>soma()) {
              DecimalFormat df = new DecimalFormat("0.00");
            jtTrocoResultado.setText("R$: " + df.format(valordado-soma()));
            }
        }else if(bgFpagamento.isSelected(jrbCredito.getModel())){
          jtTrocoResultado.setText((String)"\nForma de Pagamento: \n" + (jrbCredito.getText()));
        }else if(bgFpagamento.isSelected(jrbDebito.getModel())){
          jtTrocoResultado.setText((String)"\nForma de Pagamento: \n" + (jrbDebito.getText()));
        }else{
        JOptionPane.showMessageDialog(
                        null,
                        "Você não selecionou nenhuma forma de pagamento!",
                        "Mensagem de atenção",
                        JOptionPane.INFORMATION_MESSAGE);
        }
        return 0;
}  
    private String Fpagamento(){
            String fp;
            if (bgFpagamento.isSelected(jrbAvista.getModel())) {
                fp="Á Vista";
                
            }else if(bgFpagamento.isSelected(jrbCredito.getModel())){
                fp="Crédito";
               
            }else
                fp="Débito";
        return fp;
                
    }
    
    private double soma(){
            double count=0;
            
            for (int i=0; i<=jtComprar.getRowCount()-1;i++) {
            count+=Double.parseDouble(jtComprar.getValueAt(i, 2).toString());
            }
        return count;
      }

  private void prencherTabela(){

        try {
            ProdutoServicos ps = ServicosFactory.getProdutoServicos();
           
            ArrayList<ProdutoVO> prod = new ArrayList<>();
            
            prod = ps.buscarProdutos();
             
                //Locale Brasil = new Locale("pt", "BR");
               NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale ("pt", "BR"));
                //DecimalFormat df = new DecimalFormat("0,00");
                 
            for(int i = 0; i < prod.size(); i++){
               dtm.addRow(new String[]{
                  String.valueOf(prod.get(i).getIdProduto()),
                  String.valueOf(prod.get(i).getNomeProduto()),
                  //String.valueOf(prod.get(i).getValorCusto())
                  nf.format(prod.get(i).getValorCusto())

              });
            }//fecha for
            
            
            jtProdutos.setModel(dtm);
            
        } catch (Exception e) {    
            JOptionPane.showMessageDialog(
                        null,
                        "Erro ao Prencher tabela!",
                        "Mensagem de Erro",
                        JOptionPane.INFORMATION_MESSAGE);
        }//fecha catch
    }//fecha prencher tabelaProdutos
            
   private void prencherTabelaComprar() throws ParseException{
     
       if (jtProdutos.getSelectedRowCount()!=0){ //Verifica se existe linha selecionada para não dar erro na hora de pegar os valores
	//Pega os models das listas, para fazer as inserções e remoções
         NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale ("pt", "BR"));
         
	DefaultTableModel modelOrigem = (DefaultTableModel) jtProdutos.getModel();
	DefaultTableModel modelDestino = (DefaultTableModel) jtComprar.getModel();           
	//Cria uma linha para ser incluida na tabela de destino, no meu caso tem duas colunas, adapte para as suas tabelas
	Object[] obj = {jtProdutos.getValueAt(jtProdutos.getSelectedRow(), 0),
                        jtProdutos.getValueAt(jtProdutos.getSelectedRow(), 1),
                       nf.parse((String) jtProdutos.getValueAt(jtProdutos.getSelectedRow(), 2))};
                       // jtProdutos.getValueAt(jtProdutos.getSelectedRow(), 3)};
	//Adiciona no destino e remove da origem
	modelDestino.addRow(obj);
        
        
        //modelOrigem.removeRow(jtProdutos.getSelectedRow());
} else { 
                  JOptionPane.showMessageDialog(
                        null,
                        "você não selecionou nenhuma linha!",
                        "Mensagem de atenção",
                        JOptionPane.INFORMATION_MESSAGE);          
    }//fecha else
   }//fecha prencher tabelaCopmprar

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgFpagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jbAdicionarProduto;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbCadastrarAtendimento;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JCheckBox jrbAvista;
    private javax.swing.JCheckBox jrbCredito;
    private javax.swing.JCheckBox jrbDebito;
    private javax.swing.JTable jtComprar;
    private javax.swing.JTextField jtNomeCli;
    private javax.swing.JTextField jtPagamento;
    private javax.swing.JTextArea jtPagamentoResultado;
    private javax.swing.JTable jtProdutos;
    private javax.swing.JTextField jtSoma;
    private javax.swing.JTextArea jtTrocoResultado;
    // End of variables declaration//GEN-END:variables
}
