/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.AtendimentoVO;
import modelo.MesVO;
import modelo.SemanaVO;
import servicos.AtendimentoServicos;
import servicos.MesServicos;
import servicos.SemanaServicos;
import servicos.ServicosFactory;

/**
 *
 * @author braia
 */
public class GUIGerenciaAtendimentos extends javax.swing.JInternalFrame {
 DefaultTableModel dtm = new DefaultTableModel(
    new Object[][]{},
    new Object[]{"Código", "Nome Cliente", "F Pagamento", "Valor total"});
    /**
     * Creates new form GUIGerenciaAtendimentos
     */
    public GUIGerenciaAtendimentos() {
        initComponents();
        prencherTabelaAtendimento();
        IconeTela();
    }
        private void limparTabela(){
           dtm.setNumRows(0);
        }
        
          private void IconeTela(){
       String URL = "/icones/icon_title2.png";
       setFrameIcon(new ImageIcon(this.getClass().getResource(URL)));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabelaAtendimentos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jbExcluir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jcbFiltrar = new javax.swing.JComboBox();
        jtPesquisa = new javax.swing.JTextField();
        jbFecharMes = new javax.swing.JButton();
        jcbfiltrarMes = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jbAtualizar = new javax.swing.JButton();
        jcbfiltrarSemana = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jbSemana = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jTextField1.setText("jTextField1");

        setClosable(true);

        jtTabelaAtendimentos.setFocusable(false);
        jtTabelaAtendimentos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jtTabelaAtendimentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome Cliente", "F Pagamento", "Valor total"
            }
        ));
        jtTabelaAtendimentos.getTableHeader().setResizingAllowed(false);
        jtTabelaAtendimentos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtTabelaAtendimentos);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbExcluir.setText("Excluir Atendimento");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jLabel2.setText("Filtrar por: ");

        jcbFiltrar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nome", "Forma de pagamento" }));
        jcbFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFiltrarActionPerformed(evt);
            }
        });

        jtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPesquisaActionPerformed(evt);
            }
        });
        jtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtPesquisaKeyReleased(evt);
            }
        });

        jbFecharMes.setText("Fechar mês");
        jbFecharMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharMesActionPerformed(evt);
            }
        });

        jcbfiltrarMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));

        jLabel3.setText("Mês:");

        jbAtualizar.setText("Atualizar");
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });

        jcbfiltrarSemana.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Terça", "Quarta", "Quinta", "Sexta", "Sábado" }));
        jcbfiltrarSemana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbfiltrarSemanaActionPerformed(evt);
            }
        });

        jLabel4.setText("Semana:");

        jbSemana.setText("Fechar Semana");
        jbSemana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSemanaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbFiltrar, 0, 197, Short.MAX_VALUE)
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtPesquisa)
                            .addComponent(jbExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(44, 44, 44)
                        .addComponent(jcbfiltrarMes, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbFecharMes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbAtualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbSemana, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcbfiltrarSemana, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbfiltrarMes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jbFecharMes, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbfiltrarSemana, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jbSemana, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void prencherTabelaAtendimento(){
        try {
            AtendimentoServicos as = ServicosFactory.getAtendimentoServicos();
           
            ArrayList<AtendimentoVO> aten = new ArrayList<>();
            
            aten = as.buscarAtendimento();
            
            String formata = "0.00";
            Locale local = new Locale("pt", "BR");
            DecimalFormatSymbols simbolo = new DecimalFormatSymbols(local);
            simbolo.setDecimalSeparator('.');//separador decimal responsavel por colocar o ponto ao inves de virgula
            simbolo.setGroupingSeparator(',');
            DecimalFormat df = new DecimalFormat(formata, simbolo);
           
            for(int i = 0; i < aten.size(); i++){
               dtm.addRow(new String[]{
                  String.valueOf(aten.get(i).getIdAtendimento()),
                  String.valueOf(aten.get(i).getNomeCliente()),
                  String.valueOf(aten.get(i).getFPagamento()),
                  df.format(aten.get(i).getValorTotal())
               });
            }//fecha for
            
            
            jtTabelaAtendimentos.setModel(dtm);
            
        } catch (Exception e) {
               JOptionPane.showMessageDialog(
                        null,
                        "Erro ao Prencher tabela Atendimentos!",
                        "Mensagem de Erro",
                        JOptionPane.ERROR_MESSAGE);
        }//fecha catch
    }//fecha prencher tabela
     
    
      private void filtrarAtendimento(){
        try {
            if (jtPesquisa.getText().isEmpty()) {
                prencherTabelaAtendimento();
            }else{
                AtendimentoServicos as = ServicosFactory.getAtendimentoServicos();
               
                /* Buscando o valor da JComboBox. O método getSelectedItem
                    devolve um Object selecionado na JCombo */
                String pesquisa = (String) jcbFiltrar.getSelectedItem();
                
                //Criando variável que armazenará a consulta.
                String query = null;
               
        if(pesquisa.equals("Nome")){
                    query = "where nomeCli like '%" + jtPesquisa.getText() + "%'";
                }else{
        
                         switch(pesquisa){
                                                      
                          case "Forma de pagamento":
                           query = "where formaPagamento like '%" + jtPesquisa.getText() + "%'";
                            break;
                  }
                }
                    

                /* Criando um ArrayList vazio para receber os dados do banco. */
                ArrayList<AtendimentoVO> aten = new ArrayList<>();               
                
                /* Buscando um ArrayList conforme o filtro que o usuário
                    solicitou. */                
                aten = as.filtrarAtendimento(query);
                
                /* For que preenche o modelo de tabela (dtm) buscando 
                   dados do ArrayList chamado p. */
                for (int i = 0; i < aten.size(); i++) {
                    dtm.addRow(new String[]{
                        String.valueOf(aten.get(i).getIdAtendimento()),
                        String.valueOf(aten.get(i).getNomeCliente()),
                        String.valueOf(aten.get(i).getFPagamento()),
                        String.valueOf(aten.get(i).getValorTotal())
            
                    });
                }//fecha for
                jtTabelaAtendimentos.setModel(dtm);                
            }//fecha else
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao filtrar atendimento! " + e.getMessage());
        }//fecha catch        
    }//fecha filtrar
      
      
        private void deletarAtendimento() {
        try {
            /* Buscando a linha que o usuário clicou */
            int linha = jtTabelaAtendimentos.getSelectedRow();
            
            /* Testando se o usuário selecionou alguma linha. */
            if (linha == -1) {
     JOptionPane.showMessageDialog(
                        null,
                        "você não selecionou nenhuma linha!",
                        "Mensagem de atenção",
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                AtendimentoServicos as = ServicosFactory.getAtendimentoServicos();
                
                String idAtendimento = (String) jtTabelaAtendimentos.getValueAt(linha, 0);
                
                as.deletarAtenidmento(Long.parseLong(idAtendimento));

                //Mensagem de sucesso para o usuário!
        JOptionPane.showMessageDialog(
                        null,
                        "Atendimento excluido com sucesso!",
                        "Mensagem de confirmação",
                        JOptionPane.INFORMATION_MESSAGE);
            }//fecha else
        } catch (Exception e) {
                 JOptionPane.showMessageDialog(
                        null,
                        "erro ao deletar!",
                        "Mensagem de erro",
                        JOptionPane.ERROR_MESSAGE);
        }//fecha catch        
    }//fecha deletar
     
         private void cadastrarMes(){
             try {                 
            MesVO mVO = new MesVO();         
            mVO.setMes(selecionaMes());
            mVO.setvTotal(soma());
            MesServicos ms = servicos.ServicosFactory.getMesServicos();
          
            ms.cadastrarMes(mVO);
            
            JOptionPane.showMessageDialog(
                        null,
                        "Mes cadastrado com sucesso!",
                        "Mensagem de confirmação",
                        JOptionPane.INFORMATION_MESSAGE);        
            
        } catch (Exception e) {
            e.printStackTrace();
            
           JOptionPane.showMessageDialog(
                        null,
                        "erro ao cadastrar Mes!",
                        "Mensagem de erro",
                        JOptionPane.ERROR_MESSAGE);
           
        }//fecha catch     
    }//fecha método cadastrar
        
       private String selecionaMes(){
            
        String selecionaMes = (String) jcbfiltrarMes.getSelectedItem();
          
        if(selecionaMes.equalsIgnoreCase("Janeiro")){
                selecionaMes = "Janeiro";
        
        }else if(selecionaMes.equalsIgnoreCase("Fevereiro")){
                selecionaMes = "Fevereiro";
        
        }else if(selecionaMes.equalsIgnoreCase("Março")){
                 selecionaMes = "Março";
         
        }else if(selecionaMes.equalsIgnoreCase("Abril")){
                selecionaMes = "Abril";
         
        }else if(selecionaMes.equalsIgnoreCase("Maio")){
                selecionaMes = "Maio";
         
        }else if(selecionaMes.equalsIgnoreCase("Junho")){
                selecionaMes = "Junho";
         
        }else if(selecionaMes.equalsIgnoreCase("Julho")){
                selecionaMes = "Julho";
         
        }else if(selecionaMes.equalsIgnoreCase("Agosto")){
                selecionaMes = "Agosto";
        
        }else if(selecionaMes.equalsIgnoreCase("Setembro")){
                selecionaMes = "Setembro";
        
        }else if(selecionaMes.equalsIgnoreCase("Outubro")){
                selecionaMes = "Outubro";
        
        }else if(selecionaMes.equalsIgnoreCase("Novembro")){
                selecionaMes = "Novembro";
        
        }else if(selecionaMes.equalsIgnoreCase("Dezembro")){
                selecionaMes = "Dezembro";
       
        }return selecionaMes;          
       }//fecha metodo
       
       private void cadastrarSemana(){
             try {                 
            SemanaVO sVO = new SemanaVO();         
            sVO.setSemana(selecionaSemana());
            sVO.setvTotal(soma());
            SemanaServicos ss = servicos.ServicosFactory.getSemanaServicos();
          
            ss.cadastrarSemana(sVO);
            
            JOptionPane.showMessageDialog(
                        null,
                        "Semana cadastrada com sucesso!",
                        "Mensagem de confirmação",
                        JOptionPane.INFORMATION_MESSAGE);        
            
        } catch (Exception e) {
            e.printStackTrace();
            
           JOptionPane.showMessageDialog(
                        null,
                        "erro ao cadastrar Semana!",
                        "Mensagem de erro",
                        JOptionPane.ERROR_MESSAGE);
           
        }//fecha catch     
    }//fecha método cadastrar
       
         private String selecionaSemana(){
            
        String selecionaSemana = (String) jcbfiltrarSemana.getSelectedItem();
          
        if(selecionaSemana.equalsIgnoreCase("Terça")){
                selecionaSemana = "Terça";
        
        }else if(selecionaSemana.equalsIgnoreCase("Quarta")){
                selecionaSemana = "Quarta";
        
        }else if(selecionaSemana.equalsIgnoreCase("Quinta")){
                 selecionaSemana = "Quinta";
         
        }else if(selecionaSemana.equalsIgnoreCase("Sexta")){
                selecionaSemana = "Sexta";
         
        }else if(selecionaSemana.equalsIgnoreCase("Sábado")){
                selecionaSemana = "Sábado";               
       
        }return selecionaSemana;          
       }//fecha metodo
        
         private double soma(){       
            double count=0;            
            for (int i=0; i<=jtTabelaAtendimentos.getRowCount()-1;i++) {
            count+=Double.parseDouble(jtTabelaAtendimentos.getValueAt(i, 3).toString());
            }
        return count;
      }
              
    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
                deletarAtendimento();
                limparTabela();
                prencherTabelaAtendimento();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbFecharMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharMesActionPerformed
          cadastrarMes();
         ((DefaultTableModel) jtTabelaAtendimentos.getModel()).setRowCount(0);//limpa a tabela compra
    
    }//GEN-LAST:event_jbFecharMesActionPerformed

    private void jtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPesquisaKeyReleased
                limparTabela(); 
                filtrarAtendimento();
    }//GEN-LAST:event_jtPesquisaKeyReleased

    private void jtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPesquisaActionPerformed

    private void jcbFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFiltrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbFiltrarActionPerformed

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
                limparTabela();
                prencherTabelaAtendimento();
    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jcbfiltrarSemanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbfiltrarSemanaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbfiltrarSemanaActionPerformed

    private void jbSemanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSemanaActionPerformed
          cadastrarSemana();
         ((DefaultTableModel) jtTabelaAtendimentos.getModel()).setRowCount(0);//limpa a tabela compra
    
    }//GEN-LAST:event_jbSemanaActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFecharMes;
    private javax.swing.JButton jbSemana;
    private javax.swing.JComboBox jcbFiltrar;
    private javax.swing.JComboBox<String> jcbfiltrarMes;
    private javax.swing.JComboBox<String> jcbfiltrarSemana;
    private javax.swing.JTextField jtPesquisa;
    private javax.swing.JTable jtTabelaAtendimentos;
    // End of variables declaration//GEN-END:variables
}
